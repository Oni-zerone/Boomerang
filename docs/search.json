{"Typealiases.html#/s:9Boomerang15ObservableErrora":{"name":"ObservableError","abstract":"<p>Typealias for <code>Observable&lt;Error?&gt;</code></p>"},"Structs/ResultRange.html#/s:9Boomerang15ResultRangeTypeP5start10Foundation9IndexPathVvp":{"name":"start","parent_name":"ResultRange"},"Structs/ResultRange.html#/s:9Boomerang15ResultRangeTypeP3end10Foundation9IndexPathVvp":{"name":"end","parent_name":"ResultRange"},"Structs/ResultRange.html#/s:9Boomerang11ResultRangeVACSg10Foundation9IndexPathVSg5start_AH3endtcfc":{"name":"init(start:end:)","abstract":"<p>Creates a  new ResultRange object with provided start and end indexes</p>","parent_name":"ResultRange"},"Structs/EmptyRouterAction.html#/s:9Boomerang17EmptyRouterActionV7executeyyF":{"name":"execute()","abstract":"<p>Undocumented</p>","parent_name":"EmptyRouterAction"},"Structs/EmptyRouterAction.html#/s:9Boomerang17EmptyRouterActionVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"EmptyRouterAction"},"Structs/EmptyRouterAction.html":{"name":"EmptyRouterAction","abstract":"<p>Undocumented</p>"},"Structs/ResultRange.html":{"name":"ResultRange","abstract":"<p>Concrete implementation of ResultRangeType</p>"},"Protocols/ViewModelTypeFailable.html#/s:9Boomerang21ViewModelTypeFailableP4fail7RxSwift10ObservableCys5Error_pGvp":{"name":"fail","abstract":"<p>Undocumented</p>","parent_name":"ViewModelTypeFailable"},"Protocols/ViewModelTypeLoadable.html#/s:9Boomerang21ViewModelTypeLoadableP7loading7RxSwift10ObservableCySbGvp":{"name":"loading","abstract":"<p>Undocumented</p>","parent_name":"ViewModelTypeLoadable"},"Protocols/ViewModelBindable.html#/s:9Boomerang17ViewModelBindableP0bC0":{"name":"ViewModel","abstract":"<p>Undocumented</p>","parent_name":"ViewModelBindable"},"Protocols/ViewModelBindable.html#/s:9Boomerang17ViewModelBindableP04viewC00bC0QzSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"ViewModelBindable"},"Protocols/ViewModelType.html#/s:9Boomerang13ViewModelTypePAAE10disposeBag7RxSwift07DisposeF0Cvp":{"name":"disposeBag","abstract":"<p>A lazily-created disposeBag where disposables can be easily stored.</p>","parent_name":"ViewModelType"},"Protocols/ViewModelTypeIdentifiable.html#/s:9Boomerang25ViewModelTypeIdentifiableP14itemIdentifierAA04ListG0_pvp":{"name":"itemIdentifier","abstract":"<p>Item identifier for the view model. Useful in lists.</p>","parent_name":"ViewModelTypeIdentifiable"},"Protocols/ListIdentifier.html#/s:9Boomerang14ListIdentifierP4nameSSvp":{"name":"name","abstract":"<p>A string name</p>","parent_name":"ListIdentifier"},"Protocols/ListIdentifier.html#/s:9Boomerang14ListIdentifierP12isEmbeddableSbvp":{"name":"isEmbeddable","abstract":"<p>In TableViews and CollectionViews, setting this value to true will have Boomerang to create custom default cells and embed provided xibs into them. This allow developers to decouple the itemView from its container (ex: the same view can be used as is in a collectionViews AND in a tableViews.","parent_name":"ListIdentifier"},"Protocols/ListViewModelTypeSectionable.html#/s:9Boomerang28ListViewModelTypeSectionableP011sectionItemcD0AA0hcdE0_pSgAA0dE0_p04fromD0_SS04withE0tF":{"name":"sectionItemViewModel(fromModel:withType:)","abstract":"<p>Retrieves proper section ItemViewModel from a model and with custom type identifier</p>","parent_name":"ListViewModelTypeSectionable"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP10viewModels7RxCocoa13BehaviorRelayCys10DictionaryVy10Foundation9IndexPathVAA013ItemViewModelE0_pGGvp":{"name":"viewModels","abstract":"<p>A map used to hold references to ItemViewModels</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP12resultsCount7RxCocoa13BehaviorRelayCySiGvp":{"name":"resultsCount","abstract":"<p>An observable property with current results count.</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP9isLoading7RxCocoa13BehaviorRelayCySbGvp":{"name":"isLoading","abstract":"<p>An observable property with current loading status.</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP03newC9Available7RxCocoa13BehaviorRelayCyAA0bC6UpdateOSgGvp":{"name":"newDataAvailable","abstract":"<p>Notify (manually if needed) if new data is available in the list.</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP14modelStructure7RxCocoa13BehaviorRelayCyAA05ModelG0CGvp":{"name":"modelStructure","abstract":"<p>Observable relay for for current ModelStructure.</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP13commitEditing7RxCocoa13BehaviorRelayCySbGvp":{"name":"commitEditing","abstract":"<p>Triggers a reload after inner data has changed</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP12reloadAction0G0AECyAA011ResultRangeE0_pSgAA14ModelStructureCGvp":{"name":"reloadAction","abstract":"<p>Inner Action used to trigger updates and emit new values when available</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP10moreAction0G0AECyAA011ResultRangeE0_pSgAA14ModelStructureCGvp":{"name":"moreAction","abstract":"<p>Supplementary action useful for <q>infinite scrolling</q> scenarios, where new data has to be added to the list without a complete reload</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP10deleteItemy10Foundation9IndexPathV02atI0_tF":{"name":"deleteItem(atIndex:)","abstract":"<p>Deletes item from inner model structure at provided index path</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP6reloadyyF":{"name":"reload()","abstract":"<p>Completely reloads current data by creating a new subscription to provided data observable</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypeP6commityyF":{"name":"commit()","abstract":"<p>Notify every subscriber that an update procedure over inner ModelStructure has completed. This is useful in scenarios where some items are deleted AND inserted at once: in that case, <code>commit()</code> must be called at the end to notify UI components to only update once</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePxycfc":{"name":"init()","abstract":"<p>Basic initializer. Returns an empty data holder</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePAAE10disposeBag7RxSwift07DisposeG0Cvp":{"name":"disposeBag","abstract":"<p>A lazily-created disposeBag where disposables can be easily stored.</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePAAE5emptyAaB_pvpZ":{"name":"empty","abstract":"<p>Returns an empty data holder with an empty model structure</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePAAE6insertyAA05ModelE0_p4item_10Foundation9IndexPathV02atJ0tF":{"name":"insert(item:atIndex:)","abstract":"<p>Insert a new ModelType at provided indexPath</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePAAE6insertySayAA05ModelE0_pG5items_10Foundation9IndexPathV012startingFromJ0tF":{"name":"insert(items:startingFromIndex:)","abstract":"<p>Insert an array of ModelType objects starting at provided indexPath</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePAAE6insertyAA14ModelStructureC9structure_10Foundation9IndexPathV012startingFromK0tF":{"name":"insert(structure:startingFromIndex:)","abstract":"<p>Insert a new ModelStructure as children of current ModelStructure at provided indexPath</p>","parent_name":"ListDataHolderType"},"Protocols/ListDataHolderType.html#/s:9Boomerang18ListDataHolderTypePAAEx7RxSwift10ObservableCyAA14ModelStructureCG4data_AISg4moretcfc":{"name":"init(data:more:)","abstract":"<p>Creates a new ListDataHolder</p>","parent_name":"ListDataHolderType"},"Protocols/ResultRangeType.html#/s:9Boomerang15ResultRangeTypeP5start10Foundation9IndexPathVvp":{"name":"start","abstract":"<p>Range&rsquo;s starting index</p>","parent_name":"ResultRangeType"},"Protocols/ResultRangeType.html#/s:9Boomerang15ResultRangeTypeP3end10Foundation9IndexPathVvp":{"name":"end","abstract":"<p>Range&rsquo;s end index</p>","parent_name":"ResultRangeType"},"Protocols/ItemViewModelType.html#/s:9Boomerang17ItemViewModelTypeP0D0a":{"name":"Model","abstract":"<p>Undocumented</p>","parent_name":"ItemViewModelType"},"Protocols/ItemViewModelType.html#/s:9Boomerang17ItemViewModelTypeP9itemTitleSSSgvp":{"name":"itemTitle","abstract":"<p>A title describing underlying model. Useful for generic identification in simple lists or pickers.</p>","parent_name":"ItemViewModelType"},"Protocols/ItemViewModelType.html#/s:9Boomerang17ItemViewModelTypeP5modelAA0dE0_pvp":{"name":"model","abstract":"<p>The underlying model</p>","parent_name":"ItemViewModelType"},"Protocols/ViewModelBindableType.html#/s:9Boomerang21ViewModelBindableTypeP10disposeBag7RxSwift07DisposeG0Cvp":{"name":"disposeBag","abstract":"<p>Undocumented</p>","parent_name":"ViewModelBindableType"},"Protocols/ViewModelBindableType.html#/s:9Boomerang21ViewModelBindableTypeP4bindyAA0bcE0_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Undocumented</p>","parent_name":"ViewModelBindableType"},"Protocols/ViewModelBindableType.html#/s:9Boomerang21ViewModelBindableTypePAASo16UIViewControllerCRbzrlE4bindyAA0bcE0_pSg2to_Sb9afterLoadtF":{"name":"bind(to:afterLoad:)","abstract":"<p>Undocumented</p>","parent_name":"ViewModelBindableType"},"Protocols/ViewControllerActionBindable.html#/s:9Boomerang28ViewControllerActionBindableP10showLoaderyyF":{"name":"showLoader()","abstract":"<p>Undocumented</p>","parent_name":"ViewControllerActionBindable"},"Protocols/ViewControllerActionBindable.html#/s:9Boomerang28ViewControllerActionBindableP10hideLoaderyyF":{"name":"hideLoader()","abstract":"<p>Undocumented</p>","parent_name":"ViewControllerActionBindable"},"Protocols/ViewControllerActionBindable.html#/s:9Boomerang28ViewControllerActionBindableP9showErrory0D00dG0OF":{"name":"showError(_:)","abstract":"<p>Undocumented</p>","parent_name":"ViewControllerActionBindable"},"Protocols/ViewControllerActionBindable.html#/s:9Boomerang28ViewControllerActionBindablePAASo06UIViewC0CRbzrlE6bindTo7RxSwift10Disposable_pAG10ObservableCy0D00D5ErrorOG10observable_tF":{"name":"bindTo(observable:)","abstract":"<p>Undocumented</p>","parent_name":"ViewControllerActionBindable"},"Protocols/ViewControllerActionBindable.html#/s:9Boomerang28ViewControllerActionBindablePAASo06UIViewC0CRbzrlE6bindTo7RxSwift10Disposable_p0D0AICyqd__qd_0_G6action_tr0_lF":{"name":"bindTo(action:)","abstract":"<p>Undocumented</p>","parent_name":"ViewControllerActionBindable"},"Protocols/ViewControllerActionBindable.html#/s:9Boomerang28ViewControllerActionBindablePAASo06UIViewC0CRbzrlE6bindTo7RxSwift10Disposable_pAG10ObservableCySbG10observable_tF":{"name":"bindTo(observable:)","abstract":"<p>Undocumented</p>","parent_name":"ViewControllerActionBindable"},"Protocols/ErrorReceiver.html#/s:9Boomerang13ErrorReceiverP04showB0y6Action0eB0OF":{"name":"showError(_:)","abstract":"<p>Undocumented</p>","parent_name":"ErrorReceiver"},"Protocols/LoaderReceiver.html#/s:9Boomerang14LoaderReceiverP04showB0yyF":{"name":"showLoader()","abstract":"<p>Undocumented</p>","parent_name":"LoaderReceiver"},"Protocols/LoaderReceiver.html#/s:9Boomerang14LoaderReceiverP04hideB0yyF":{"name":"hideLoader()","abstract":"<p>Undocumented</p>","parent_name":"LoaderReceiver"},"Protocols/EmbeddableView.html#/s:9Boomerang14EmbeddableViewP13isPlaceholderSbvp":{"name":"isPlaceholder","abstract":"<p>Setting this flag identifies a view that is currently being used as a placeholder and will never be displayed.","parent_name":"EmbeddableView"},"Protocols/EmbeddableView.html#/s:9Boomerang14EmbeddableViewP013customContentC0So6UIViewCvp":{"name":"customContentView","abstract":"<p>Actual container for inner view</p>","parent_name":"EmbeddableView"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP11canEditItemSb10Foundation9IndexPathV02atiJ0_tF":{"name":"canEditItem(atIndexPath:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP13canDeleteItemSb10Foundation9IndexPathV02atiJ0_tF":{"name":"canDeleteItem(atIndexPath:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP10deleteItemy10Foundation9IndexPathV02athI0_tF":{"name":"deleteItem(atIndexPath:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP13canInsertItemSb10Foundation9IndexPathV02atiJ0_tF":{"name":"canInsertItem(atIndexPath:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP10insertItemy10Foundation9IndexPathV02athI0_tF":{"name":"insertItem(atIndexPath:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP11canMoveItemSb10Foundation9IndexPathV02atiJ0_tF":{"name":"canMoveItem(atIndexPath:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/EditableViewModel.html#/s:9Boomerang17EditableViewModelP8moveItemy10Foundation9IndexPathV04fromhI0_AG2totF":{"name":"moveItem(fromIndexPath:to:)","abstract":"<p>Undocumented</p>","parent_name":"EditableViewModel"},"Protocols/ListPagerViewModelType.html#/s:9Boomerang22ListPagerViewModelTypeP13startingIndexSivp":{"name":"startingIndex","abstract":"<p>The initial index to display when pager is reloaded</p>","parent_name":"ListPagerViewModelType"},"Protocols/ListPagerViewModelType.html#/s:9Boomerang22ListPagerViewModelTypeP14viewControllerSo06UIViewH0CSgAA0B10Identifier_p04fromJ0_tF":{"name":"viewController(fromIdentifier:)","abstract":"<p>The viewController matching provided identifier</p>","parent_name":"ListPagerViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypeP10dataHolderAA0b4DatagE0_pvp":{"name":"dataHolder","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ListDataHolderType.html\">ListDataHolderType</a></code> object that will handle model data</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypeP15reuseIdentifierSSSgAA0bG0_p3for_10Foundation9IndexPathV2attF":{"name":"reuseIdentifier(for:at:)","abstract":"<p>A string identifier that will be used by components with concepts of view reuse/recycle/dequeue (UITableView/UICollectionView/MKMapView) as reuseIdentifer.</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypeP5modelAA0dE0_pSg10Foundation9IndexPathV02atH0_tF":{"name":"model(atIndex:)","abstract":"<p>Returns current model at provided indexPath</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypeP04itemcD0AA04ItemcdE0_pSgAA0dE0_p04fromD0_tF":{"name":"itemViewModel(fromModel:)","abstract":"<p>Converts a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols.html#/s:9Boomerang9ModelTypeP\">ModelType</a></code> object into an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ItemViewModelType.html\">ItemViewModelType</a></code></p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypeP6reloadyyF":{"name":"reload()","abstract":"<p>Fully reloads current contents by triggering inner ListDataHolder&rsquo;s reload method</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePAAE010collectionC10DataSourceSo012UICollectioncgH0_pSgvp":{"name":"collectionViewDataSource","abstract":"<p>A concrete implementation for <code>UICollectionViewDataSource</code> (UIKit requires it to be objc compatible). Value is retained.</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePAAE05tableC10DataSourceSo07UITablecgH0_pSgvp":{"name":"tableViewDataSource","abstract":"<p>Undocumented</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePAAE06pickerC10DataSourceAA06PickerC16CombinedDelegate_pSgvp":{"name":"pickerViewDataSource","abstract":"<p>A pickerViewDataSource used for UIPickerView binding</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePAAE7isEmpty7RxSwift10ObservableCySbGvp":{"name":"isEmpty","abstract":"<p>Defines if current dataHolder is empty or not.</p>","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePAAE10identifierAA0B10Identifier_pSg10Foundation9IndexPathV02atI0_tF":{"name":"identifier(atIndex:)","abstract":"<p>Proper item identifier from matching viewModel at indexPath.","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePAAE04viewD0AA04ItemcdE0_pSg10Foundation9IndexPathV02atI0_tF":{"name":"viewModel(atIndex:)","abstract":"<p>Returns an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ItemViewModelType.html\">ItemViewModelType</a></code> for provided indexPath.","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePA2A0cdE8FailableRzrlE4fail7RxSwift10ObservableCy6Action0K5ErrorOGvp":{"name":"fail","parent_name":"ListViewModelType"},"Protocols/ListViewModelType.html#/s:9Boomerang17ListViewModelTypePA2A0cdE8LoadableRzrlE7loading7RxSwift10ObservableCySbGvp":{"name":"loading","parent_name":"ListViewModelType"},"Protocols/RouterType.html#/s:9Boomerang10RouterTypeP6Sourcea":{"name":"Source","abstract":"<p>Undocumented</p>","parent_name":"RouterType"},"Protocols/RouterType.html#/s:9Boomerang10RouterTypeP11Destinationa":{"name":"Destination","abstract":"<p>Undocumented</p>","parent_name":"RouterType"},"Protocols/RouterType.html#/s:9Boomerang10RouterTypeP20DestinationViewModela":{"name":"DestinationViewModel","abstract":"<p>Undocumented</p>","parent_name":"RouterType"},"Protocols/RouterType.html#/s:9Boomerang10RouterTypeP4fromAA0B6Action_pqd___qd_0_11destinationqd_1_9viewModeltr1_lFZ":{"name":"from(_:destination:viewModel:)","abstract":"<p>Undocumented</p>","parent_name":"RouterType"},"Protocols/RouterType.html#/s:9Boomerang10RouterTypeP4fromAA0B6Action_pqd___qd_0_9viewModeltr0_lFZ":{"name":"from(_:viewModel:)","abstract":"<p>Undocumented</p>","parent_name":"RouterType"},"Protocols/RouterType.html#/s:9Boomerang10RouterTypeP6backToAA0B6Action_pqd___AA0B11Destination_pSg11destinationtlFZ":{"name":"backTo(_:destination:)","abstract":"<p>Undocumented</p>","parent_name":"RouterType"},"Protocols/RouterAction.html#/s:9Boomerang12RouterActionP7executeyyF":{"name":"execute()","abstract":"<p>Undocumented</p>","parent_name":"RouterAction"},"Protocols.html#/s:9Boomerang9ModelTypeP":{"name":"ModelType","abstract":"<p>A single entity that represents a listable object in the MVVM pattern, inside the Model layer.</p>"},"Protocols.html#/s:9Boomerang12RouterSourceP":{"name":"RouterSource","abstract":"<p>Undocumented</p>"},"Protocols/RouterAction.html":{"name":"RouterAction","abstract":"<p>Undocumented</p>"},"Protocols.html#/s:9Boomerang17RouterDestinationP":{"name":"RouterDestination","abstract":"<p>Undocumented</p>"},"Protocols/RouterType.html":{"name":"RouterType","abstract":"<p>Undocumented</p>"},"Protocols/ListViewModelType.html":{"name":"ListViewModelType","abstract":"<p>A special ViewModel used to handle lists and collections of smaller viewModels</p>"},"Protocols/ListPagerViewModelType.html":{"name":"ListPagerViewModelType","abstract":"<p>Generic protocol used to handle pagers (usually horizontal collections of view controllers such as UIPageViewController).</p>"},"Protocols/EditableViewModel.html":{"name":"EditableViewModel","abstract":"<p>Undocumented</p>"},"Protocols/EmbeddableView.html":{"name":"EmbeddableView","abstract":"<p>A view that can be embedded in cells (UICollectionViewCells or UITableViewCells).</p>"},"Protocols/LoaderReceiver.html":{"name":"LoaderReceiver","abstract":"<p>Undocumented</p>"},"Protocols/ErrorReceiver.html":{"name":"ErrorReceiver","abstract":"<p>Undocumented</p>"},"Protocols/ViewControllerActionBindable.html":{"name":"ViewControllerActionBindable","abstract":"<p>Undocumented</p>"},"Protocols/ViewModelBindableType.html":{"name":"ViewModelBindableType","abstract":"<p>An object that can be bound to a viewModel.</p>"},"Protocols.html#/s:9Boomerang26PickerViewCombinedDelegateP":{"name":"PickerViewCombinedDelegate","abstract":"<p>Simultaneous compliance to <code>UIPickerViewDelegate</code> and <code>UIPickerViewDataSource</code></p>"},"Protocols/ItemViewModelType.html":{"name":"ItemViewModelType","abstract":"<p>A view model that is created from a Model and can be inserted in a list handled by a ListViewModelType."},"Protocols/ResultRangeType.html":{"name":"ResultRangeType","abstract":"<p>A generic protocol used to identify ranges with indexPaths</p>"},"Protocols/ListDataHolderType.html":{"name":"ListDataHolderType","abstract":"<p>Generic definition of a ListDataHolder."},"Protocols/ListViewModelTypeSectionable.html":{"name":"ListViewModelTypeSectionable","abstract":"<p>A special <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ListViewModelType.html\">ListViewModelType</a></code> that also implements concepts of sections</p>"},"Protocols/ListIdentifier.html":{"name":"ListIdentifier","abstract":"<p>Generic protocol to identify a view Model in a list</p>"},"Protocols/ViewModelTypeIdentifiable.html":{"name":"ViewModelTypeIdentifiable","abstract":"<p>A view model that has an itemIdentifier</p>"},"Protocols.html#/s:9Boomerang14SelectionInputP":{"name":"SelectionInput","abstract":"<p>Undocumented</p>"},"Protocols.html#/s:9Boomerang15SelectionOutputP":{"name":"SelectionOutput","abstract":"<p>Undocumented</p>"},"Protocols/ViewModelType.html":{"name":"ViewModelType","abstract":"<p>A generic ViewModel element in MVVM pattern</p>"},"Protocols/ViewModelBindable.html":{"name":"ViewModelBindable","abstract":"<p>An object (usually, a view or a view controller) that can be bound to a viewModel."},"Protocols/ViewModelTypeLoadable.html":{"name":"ViewModelTypeLoadable","abstract":"<p>Convenience protocol used to identify some view model that <em>loads</em> something.</p>"},"Protocols/ViewModelTypeFailable.html":{"name":"ViewModelTypeFailable","abstract":"<p>Convenience protocol used to identify some view model whose actions can <em>fail</em></p>"},"Protocols.html#/s:9Boomerang9FormStyleP":{"name":"FormStyle","abstract":"<p>Previously used to pass some style informations to Form view models."},"Extensions/String.html#/s:SS9BoomerangE4nameSSvp":{"name":"name","abstract":"<p>Default value is the string itself</p>","parent_name":"String"},"Extensions/UIPickerView.html#/s:So12UIPickerViewC9BoomerangE9viewModelAC04ListbE4Type_pSgvp":{"name":"viewModel","abstract":"<p>Current viewModel for pickerView. Value it&rsquo;s retained.</p>","parent_name":"UIPickerView"},"Extensions/UIPickerView.html#/s:So12UIPickerViewC9BoomerangE10disposeBag7RxSwift07DisposeE0Cvp":{"name":"disposeBag","abstract":"<p>A disposeBag where disposables can be easily stored.</p>","parent_name":"UIPickerView"},"Extensions/UIPickerView.html#/s:So12UIPickerViewC9BoomerangE4bindyAC0B9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Binds a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ListViewModelType.html\">ListViewModelType</a></code> view model to current UIPickerView. A proper <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols.html#/s:9Boomerang26PickerViewCombinedDelegateP\">PickerViewCombinedDelegate</a></code> is created if nil on provided viewmModel.","parent_name":"UIPickerView"},"Extensions/UITableView.html#/s:So11UITableViewC9BoomerangE9viewModelAC0bE4Type_pSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC9BoomerangE13viewForHeaderSo6UIViewCSgSi9inSection_tF":{"name":"viewForHeader(inSection:)","abstract":"<p>Undocumented</p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC9BoomerangE13viewForFooterSo6UIViewCSgSi9inSection_tF":{"name":"viewForFooter(inSection:)","abstract":"<p>Undocumented</p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC9BoomerangE10disposeBag7RxSwift07DisposeE0Cvp":{"name":"disposeBag","abstract":"<p>Undocumented</p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC9BoomerangE4bindyAC0B9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Undocumented</p>","parent_name":"UITableView"},"Extensions/UITableView.html#/s:So11UITableViewC9BoomerangE14autosizeItemAt12CoreGraphics7CGFloatV10Foundation9IndexPathV05indexL0_AG18constrainedToWidthtF":{"name":"autosizeItemAt(indexPath:constrainedToWidth:)","abstract":"<p>Undocumented</p>","parent_name":"UITableView"},"Extensions/UIPageViewController.html#/s:So20UIPageViewControllerC9BoomerangE9viewModelAC0bF4Type_pSgvp":{"name":"viewModel","abstract":"<p>Current viewModel. Property is retained.</p>","parent_name":"UIPageViewController"},"Extensions/UIPageViewController.html#/s:So20UIPageViewControllerC9BoomerangE10disposeBag7RxSwift07DisposeF0Cvp":{"name":"disposeBag","abstract":"<p>A lazily-created disposeBag where disposables can be easily stored.</p>","parent_name":"UIPageViewController"},"Extensions/UIPageViewController.html#/s:So20UIPageViewControllerC9BoomerangE17presentationCountSiyF":{"name":"presentationCount()","abstract":"<p>Current number of viewControllers inside the list</p>","parent_name":"UIPageViewController"},"Extensions/UIPageViewController.html#/s:So20UIPageViewControllerC9BoomerangE17presentationIndexSiyF":{"name":"presentationIndex()","abstract":"<p>Current viewController index</p>","parent_name":"UIPageViewController"},"Extensions/UIPageViewController.html#/s:So20UIPageViewControllerC9BoomerangE4bindyAC0B9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Binds current pager to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ListPagerViewModelType.html\">ListPagerViewModelType</a></code>. If provided view model doesn&rsquo;t conform to that procol, previous view model is set to nil and nothing further happens.</p>","parent_name":"UIPageViewController"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE9viewModelAC0bE4Type_pSgvp":{"name":"viewModel","abstract":"<p>Current ListViewModel. Retained.</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE16updateBufferTimeSdvp":{"name":"updateBufferTime","abstract":"<p>The amount of time the UICollectionView is given to buffer UI updates before dispatching a batchUpdate.","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE10disposeBag7RxSwift07DisposeE0Cvp":{"name":"disposeBag","abstract":"<p>A lazily-created disposeBag where disposables can be easily stored.</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE4bindyAC0B9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Binds a list view model to current collectionView and automatically handles cell creations when viewModel gets reloaded.</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE14autosizeItemAtSC6CGSizeV10Foundation9IndexPathV05indexJ0_Sf18constrainedToWidthtF":{"name":"autosizeItemAt(indexPath:constrainedToWidth:)","abstract":"<p>Creates a UICollectionViewCell with matching viewModel at indexPath without adding to any view, and determine its size by keeping width fixed at provided value.</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE14autosizeItemAtSC6CGSizeV10Foundation9IndexPathV05indexJ0_Sf19constrainedToHeighttF":{"name":"autosizeItemAt(indexPath:constrainedToHeight:)","abstract":"<p>Creates a UICollectionViewCell with matching viewModel at indexPath without adding to any view, and determine its size by keeping height fixed at provided value.</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE18autoWidthForItemAt12CoreGraphics7CGFloatV10Foundation9IndexPathV05indexN0_Si12itemsPerLinetF":{"name":"autoWidthForItemAt(indexPath:itemsPerLine:)","abstract":"<p>Calculates a cell&rsquo;s width that, multiplied by itemsPerLine,  will fit collectionView&rsquo;s width minus insets and horizontal spacings</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE19autoHeightForItemAt12CoreGraphics7CGFloatV10Foundation9IndexPathV05indexN0_Si12itemsPerLinetF":{"name":"autoHeightForItemAt(indexPath:itemsPerLine:)","abstract":"<p>Calculates a cell&rsquo;s height that, multiplied by itemsPerLine,  will fit collectionView&rsquo;s height minus insets and vertical spacings</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE30autosizeItemConstrainedToWidthSC6CGSizeV10Foundation9IndexPathV2at_Si12itemsPerLinetF":{"name":"autosizeItemConstrainedToWidth(at:itemsPerLine:)","abstract":"<p>Creates a UICollectionViewCell with matching viewModel at indexPath without adding to any view, and determine its size by calculating a fixed width that will fit current insets and spacing so that <code>itemsPerLine</code> are able to fit remaining width, and height by inflating the cell with viewModel&rsquo;s contents</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE31autosizeItemConstrainedToHeightSC6CGSizeV10Foundation9IndexPathV2at_Si12itemsPerLinetF":{"name":"autosizeItemConstrainedToHeight(at:itemsPerLine:)","abstract":"<p>Creates a UICollectionViewCell with matching viewModel at indexPath without adding to any view, and determine its size by calculating a fixed height that will fit current insets and spacing so that <code>itemsPerLine</code> are able to fit remaining height, and width by inflating the cell with viewModel&rsquo;s contents</p>","parent_name":"UICollectionView"},"Extensions/UICollectionView.html#/s:So16UICollectionViewC9BoomerangE14autosizeItemAtSC6CGSizeV10Foundation9IndexPathV05indexJ0_Si12itemsPerLinetF":{"name":"autosizeItemAt(indexPath:itemsPerLine:)","abstract":"<p>Undocumented</p>","parent_name":"UICollectionView"},"Extensions/MKMapView.html#/s:So9MKMapViewC9BoomerangE9viewModelAC0bE4Type_pSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"MKMapView"},"Extensions/MKMapView.html#/s:So9MKMapViewC9BoomerangE10disposeBag7RxSwift07DisposeE0Cvp":{"name":"disposeBag","abstract":"<p>Undocumented</p>","parent_name":"MKMapView"},"Extensions/MKMapView.html#/s:So9MKMapViewC9BoomerangE4bindyAC0B9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Undocumented</p>","parent_name":"MKMapView"},"Extensions/Observable.html#/s:7RxSwift10ObservableC9Boomerangs10CollectionRzlE10structuredACyAD14ModelStructureCGyF":{"name":"structured()","abstract":"<p>Creates an observable that emits a ModelStructure containg the collections&rsquo; elements if the collection is an array of ModelType objects.","parent_name":"Observable"},"Extensions/Observable.html":{"name":"Observable"},"Extensions/MKMapView.html":{"name":"MKMapView"},"Extensions/UICollectionView.html":{"name":"UICollectionView"},"Extensions/UIPageViewController.html":{"name":"UIPageViewController"},"Extensions/UITableView.html":{"name":"UITableView"},"Extensions/UIPickerView.html":{"name":"UIPickerView"},"Extensions/String.html":{"name":"String"},"Enums/ListDataUpdate.html#/s:9Boomerang14ListDataUpdateO6reloadAcA15ResultRangeType_pSgcACmF":{"name":"reload","abstract":"<p>Fully reload the list</p>","parent_name":"ListDataUpdate"},"Enums/ListDataUpdate.html#/s:9Boomerang14ListDataUpdateO6insertAcA15ResultRangeType_pSgcACmF":{"name":"insert","abstract":"<p>Insert the object at index&rsquo;s start. Current item at index will be placed after the new data</p>","parent_name":"ListDataUpdate"},"Enums/ListDataUpdate.html#/s:9Boomerang14ListDataUpdateO6deleteAcA15ResultRangeType_pSgcACmF":{"name":"delete","abstract":"<p>Delete items in range</p>","parent_name":"ListDataUpdate"},"Enums/ListDataUpdate.html#/s:9Boomerang14ListDataUpdateO14insertSectionsAcA15ResultRangeType_pSgcACmF":{"name":"insertSections","abstract":"<p>Insert incoming data as new sections. Last index indexpath is ignored (ex: in two-dimensional ModelStructure, new content is inserted as a new child ModelStructure, before the one currently at indexPath.section&rsquo;s index.</p>","parent_name":"ListDataUpdate"},"Enums/ListDataUpdate.html#/s:9Boomerang14ListDataUpdateO14deleteSectionsAcA15ResultRangeType_pSgcACmF":{"name":"deleteSections","abstract":"<p>Deletes full section in a multidimensional ModelStructure</p>","parent_name":"ListDataUpdate"},"Enums/TableViewHeaderType.html#/s:9Boomerang19TableViewHeaderTypeO6headerA2CmF":{"name":"header","abstract":"<p>Undocumented</p>","parent_name":"TableViewHeaderType"},"Enums/TableViewHeaderType.html#/s:9Boomerang19TableViewHeaderTypeO6footerA2CmF":{"name":"footer","abstract":"<p>Undocumented</p>","parent_name":"TableViewHeaderType"},"Enums/TableViewHeaderType.html#/s:9Boomerang19TableViewHeaderTypeO10identifierSSvp":{"name":"identifier","abstract":"<p>Undocumented</p>","parent_name":"TableViewHeaderType"},"Enums/StackableScrollViewDirection.html#/s:9Boomerang28StackableScrollViewDirectionO10horizontalA2CmF":{"name":"horizontal","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollViewDirection"},"Enums/StackableScrollViewDirection.html#/s:9Boomerang28StackableScrollViewDirectionO8verticalA2CmF":{"name":"vertical","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollViewDirection"},"Enums/UIViewControllerRouterAction.html#/s:9Boomerang28UIViewControllerRouterActionO4pushACSo0bC0C6source_AF11destinationtcACmF":{"name":"push","abstract":"<p>Undocumented</p>","parent_name":"UIViewControllerRouterAction"},"Enums/UIViewControllerRouterAction.html#/s:9Boomerang28UIViewControllerRouterActionO3popACSo0bC0C6source_tcACmF":{"name":"pop","abstract":"<p>Undocumented</p>","parent_name":"UIViewControllerRouterAction"},"Enums/UIViewControllerRouterAction.html#/s:9Boomerang28UIViewControllerRouterActionO7dismissACSo0bC0C6source_yycSg10completiontcACmF":{"name":"dismiss","abstract":"<p>Undocumented</p>","parent_name":"UIViewControllerRouterAction"},"Enums/UIViewControllerRouterAction.html#/s:9Boomerang28UIViewControllerRouterActionO5modalACSo0bC0C6source_AF11destinationyycSg10completiontcACmF":{"name":"modal","abstract":"<p>Undocumented</p>","parent_name":"UIViewControllerRouterAction"},"Enums/UIViewControllerRouterAction.html#/s:9Boomerang28UIViewControllerRouterActionO6customACyyc6action_tcACmF":{"name":"custom","abstract":"<p>Undocumented</p>","parent_name":"UIViewControllerRouterAction"},"Enums/UIViewControllerRouterAction.html#/s:9Boomerang28UIViewControllerRouterActionO7executeyyF":{"name":"execute()","abstract":"<p>Undocumented</p>","parent_name":"UIViewControllerRouterAction"},"Enums/UIViewControllerRouterAction.html":{"name":"UIViewControllerRouterAction","abstract":"<p>Undocumented</p>"},"Enums/StackableScrollViewDirection.html":{"name":"StackableScrollViewDirection","abstract":"<p>Undocumented</p>"},"Enums/TableViewHeaderType.html":{"name":"TableViewHeaderType","abstract":"<p>Undocumented</p>"},"Enums/ListDataUpdate.html":{"name":"ListDataUpdate","abstract":"<p>Defines how a generic list should be updated</p>"},"Global Variables.html#/s:9Boomerang21defaultListIdentifierSSvp":{"name":"defaultListIdentifier","abstract":"<p>Default identifier that should never be used."},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC9isLoading7RxCocoa13BehaviorRelayCySbGvp":{"name":"isLoading","abstract":"<p>An observable property with current loading status.</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC12reloadAction0F0AECyAA15ResultRangeType_pSgAA14ModelStructureCGvp":{"name":"reloadAction","abstract":"<p>Inner Action used to trigger updates and emit new values when available</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC10moreAction0F0AECyAA15ResultRangeType_pSgAA14ModelStructureCGvp":{"name":"moreAction","abstract":"<p>Supplementary action useful for <q>infinite scrolling</q> scenarios, where new data has to be added to the list without a complete reload</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC14modelStructure7RxCocoa13BehaviorRelayCyAA05ModelF0CGvp":{"name":"modelStructure","abstract":"<p>Observable relay for for current ModelStructure.</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC10viewModels7RxCocoa13BehaviorRelayCys10DictionaryVy10Foundation9IndexPathVAA17ItemViewModelType_pGGvp":{"name":"viewModels","abstract":"<p>A map used to hold references to ItemViewModels</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC12resultsCount7RxCocoa13BehaviorRelayCySiGvp":{"name":"resultsCount","abstract":"<p>An observable property with current results count.</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC03newC9Available7RxCocoa13BehaviorRelayCyAA0bC6UpdateOSgGvp":{"name":"newDataAvailable","abstract":"<p>Notify (manually if needed) if new data is available in the list.</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderC13commitEditing7RxCocoa13BehaviorRelayCySbGvp":{"name":"commitEditing","abstract":"<p>Triggers a reload after inner data has changed</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderCACycfc":{"name":"init()","abstract":"<p>Initializes an empty ListDataHolder</p>","parent_name":"ListDataHolder"},"Classes/ListDataHolder.html#/s:9Boomerang14ListDataHolderCACSayAA9ModelType_pG10withModels_tcfc":{"name":"init(withModels:)","abstract":"<p>Convenience method to create a ListDataHolder that instantly emits a single-dimension ModelStructure upon reloading</p>","parent_name":"ListDataHolder"},"Classes/ContentTableHeaderFooterView.html#/s:9Boomerang28ContentTableHeaderFooterViewC9viewModelAA0fH4Type_pSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"ContentTableHeaderFooterView"},"Classes/ContentTableHeaderFooterView.html#/s:9Boomerang28ContentTableHeaderFooterViewC10disposeBag7RxSwift07DisposeH0Cvp":{"name":"disposeBag","abstract":"<p>Undocumented</p>","parent_name":"ContentTableHeaderFooterView"},"Classes/ContentTableHeaderFooterView.html#/s:9Boomerang28ContentTableHeaderFooterViewC16insetConstraintsSaySo18NSLayoutConstraintCGvp":{"name":"insetConstraints","abstract":"<p>Undocumented</p>","parent_name":"ContentTableHeaderFooterView"},"Classes/ContentTableHeaderFooterView.html#/s:9Boomerang28ContentTableHeaderFooterViewC4bindyAA0F9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Undocumented</p>","parent_name":"ContentTableHeaderFooterView"},"Classes/ContentTableViewCell.html#/s:9Boomerang20ContentTableViewCellC9viewModelAA0dG4Type_pSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"ContentTableViewCell"},"Classes/ContentTableViewCell.html#/s:9Boomerang20ContentTableViewCellC10disposeBag7RxSwift07DisposeG0Cvp":{"name":"disposeBag","abstract":"<p>Undocumented</p>","parent_name":"ContentTableViewCell"},"Classes/ContentTableViewCell.html#/s:9Boomerang20ContentTableViewCellC16insetConstraintsSaySo18NSLayoutConstraintCGvp":{"name":"insetConstraints","abstract":"<p>Undocumented</p>","parent_name":"ContentTableViewCell"},"Classes/ContentTableViewCell.html#/s:9Boomerang20ContentTableViewCellC4bindyAA0D9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Undocumented</p>","parent_name":"ContentTableViewCell"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC9directionAA0bcD9DirectionOvp":{"name":"direction","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC6insetsSC12UIEdgeInsetsVvp":{"name":"insets","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC7spacing12CoreGraphics7CGFloatVvp":{"name":"spacing","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC7installySayAA04ItemD9ModelType_pG10viewModels_tF":{"name":"install(viewModels:)","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC9viewModelAA0dF4Type_pSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC10disposeBag7RxSwift07DisposeF0Cvp":{"name":"disposeBag","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/StackableScrollView.html#/s:9Boomerang19StackableScrollViewC4bindyAA0D9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Undocumented</p>","parent_name":"StackableScrollView"},"Classes/ViewModelPagerViewDataSource.html#/c:@M@Boomerang@objc(cs)ViewModelPagerViewDataSource(im)pageViewController:viewControllerBeforeViewController:":{"name":"pageViewController(_:viewControllerBefore:)","abstract":"<p>Undocumented</p>","parent_name":"ViewModelPagerViewDataSource"},"Classes/ViewModelPagerViewDataSource.html#/c:@M@Boomerang@objc(cs)ViewModelPagerViewDataSource(im)pageViewController:viewControllerAfterViewController:":{"name":"pageViewController(_:viewControllerAfter:)","abstract":"<p>Undocumented</p>","parent_name":"ViewModelPagerViewDataSource"},"Classes/ContentCollectionViewCell.html#/s:9Boomerang25ContentCollectionViewCellC9viewModelAA0dG4Type_pSgvp":{"name":"viewModel","abstract":"<p>Undocumented</p>","parent_name":"ContentCollectionViewCell"},"Classes/ContentCollectionViewCell.html#/s:9Boomerang25ContentCollectionViewCellC10disposeBag7RxSwift07DisposeG0Cvp":{"name":"disposeBag","abstract":"<p>A disposeBag where disposables can be easily stored.</p>","parent_name":"ContentCollectionViewCell"},"Classes/ContentCollectionViewCell.html#/s:9Boomerang25ContentCollectionViewCellC16insetConstraintsSaySo18NSLayoutConstraintCGvp":{"name":"insetConstraints","abstract":"<p>Constraints between cell and inner view. By defaults, insets are all 0.</p>","parent_name":"ContentCollectionViewCell"},"Classes/ContentCollectionViewCell.html#/s:9Boomerang25ContentCollectionViewCellC4bindyAA0D9ModelType_pSg2to_tF":{"name":"bind(to:)","abstract":"<p>Binds an external itemViewModel to current cell.","parent_name":"ContentCollectionViewCell"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC013singleSectionB10IdentifierSSvpZ":{"name":"singleSectionModelIdentifier","abstract":"<p>Undocumented</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC0B5Classa":{"name":"ModelClass","abstract":"<p>Undocumented</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC6modelsSayAA0B4Type_pGSgvp":{"name":"models","abstract":"<p>The array of ModelType objects contained by current ModelStructure. If this array has values, the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ModelStructure.html#/s:9Boomerang14ModelStructureC8childrenSayACGSgvp\">children</a></code> array must be nil</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC8childrenSayACGSgvp":{"name":"children","abstract":"<p>The array of children ModelStructure objects contained by current ModelStructure. If this array has values, the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ModelStructure.html#/s:9Boomerang14ModelStructureC6modelsSayAA0B4Type_pGSgvp\">models</a></code> array must be nil</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC13sectionModelss10DictionaryVySSAA0B4Type_pGSgvp":{"name":"sectionModels","abstract":"<p>A map of models (one or more) that are related to current array of models (or child structures).</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC07sectionB0AA0B4Type_pSgvp":{"name":"sectionModel","abstract":"<p>Convenience method to retrieve a single section model</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC13childrenCountSivp":{"name":"childrenCount","abstract":"<p>In a ModelStructure with child structures, it&rsquo;s the count of children.","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC10modelCountSivp":{"name":"modelCount","abstract":"<p>In a ModelStructure with models and no child structures, it&rsquo;s the count of contained models.","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC5emptyACvpZ":{"name":"empty","abstract":"<p>Convenience structure with no child structures and 0 models</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureCACSayAA0B4Type_pG_s10DictionaryVySSAaD_pGSg13sectionModelstcfc":{"name":"init(_:sectionModels:)","abstract":"<p>Initializes a new ModelStructure with an array of Models.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureCACSayAA0B4Type_pG_AaD_p07sectionB0tcfc":{"name":"init(_:sectionModel:)","abstract":"<p>Initializes a new ModelStructure with an array of Models.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureCACSayACGSg8children_tcfc":{"name":"init(children:)","abstract":"<p>Initializes a new ModelStructure with an array of child ModelStructure.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC10indexPathsSay10Foundation9IndexPathVGyF":{"name":"indexPaths()","abstract":"<p>A recursive list of all contained <code>IndexPath</code>s</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC5countSivp":{"name":"count","abstract":"<p>Global count of all contained models. If current structure has child ModelStructures, those are expanded and count is aggregated</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC12modelAtIndexAA0B4Type_pSg10Foundation0F4PathVF":{"name":"modelAtIndex(_:)","abstract":"<p>Model at corresponding index.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC07sectionB11AtIndexPathAA0B4Type_pSg10Foundation0fG0V_SS03forH0tF":{"name":"sectionModelAtIndexPath(_:forType:)","abstract":"<p>Section model at corresponding index and for matching string identifier.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC24sectionModelsAtIndexPaths10DictionaryVySSAA0B4Type_pGSg10Foundation0gH0VF":{"name":"sectionModelsAtIndexPath(_:)","abstract":"<p>A map of Section models at corresponding index.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC7allDataSayAA0B4Type_pGyF":{"name":"allData()","abstract":"<p>Sequentially returns all contained models or all models contained in child ModelStructures.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC10deleteItemAA0B4Type_pSg10Foundation9IndexPathV02atH0_tF":{"name":"deleteItem(atIndex:)","abstract":"<p>Deletes an item at matching indexPath. The item is returned</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC6insertAA0B4Type_pSgAaE_p4item_10Foundation9IndexPathV02atH0tF":{"name":"insert(item:atIndex:)","abstract":"<p>Insert an item at indexPath. The new element is inserted before the element currently at the specified index.</p>","parent_name":"ModelStructure"},"Classes/ModelStructure.html#/s:9Boomerang14ModelStructureC8moveItemAA0B4Type_pSg10Foundation9IndexPathV04fromhI0_AI2totF":{"name":"moveItem(fromIndexPath:to:)","abstract":"<p>Moves the item at starting indexPath to the specified indexPath.","parent_name":"ModelStructure"},"Classes/ModelStructure.html":{"name":"ModelStructure","abstract":"<p>A wrapper object for custom data structures and Model nesting</p>"},"Classes/ContentCollectionViewCell.html":{"name":"ContentCollectionViewCell","abstract":"<p>A custom UICollectionViewCell that automatically embeds any UIView"},"Classes/ViewModelPagerViewDataSource.html":{"name":"ViewModelPagerViewDataSource","abstract":"<p>Concrete, objc compliant, implementation for UIPageViewControllerDataSource</p>"},"Classes/StackableScrollView.html":{"name":"StackableScrollView","abstract":"<p>Undocumented</p>"},"Classes/ContentTableViewCell.html":{"name":"ContentTableViewCell","abstract":"<p>Undocumented</p>"},"Classes/ContentTableHeaderFooterView.html":{"name":"ContentTableHeaderFooterView","abstract":"<p>Undocumented</p>"},"Classes/ListDataHolder.html":{"name":"ListDataHolder","abstract":"<p>Concrete implementation of ListDataHolderType</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}